---
- name: Reporte de Sistema, Recursos y Agentes
  hosts: lab
  gather_facts: yes
  become: yes
  vars:
    reporte_resultado: []

  tasks:
    - name: Verificar si el agente de Zabbix está instalado
      stat:
        path: /usr/sbin/zabbix_agentd
      register: zabbix_agent_status

    - name: Verificar si Cortex está instalado (rpm -q cortex-agent)
      shell: rpm -q cortex-agent
      register: cortex_rpm_check
      failed_when: false
      changed_when: false

    - name: Definir si Cortex está instalado
      set_fact:
        cortex_installed: "{{ cortex_rpm_check.rc == 0 }}"
        cortex_details: |
          - Resultado de rpm -q: {{ cortex_rpm_check.stdout | default('No encontrado') }}
          - RESULTADO: {{ 'INSTALADO' if cortex_installed else 'NO INSTALADO' }}

    - name: Verificar estado del servicio Cortex (opcional)
      command: /opt/traps/bin/cytool runtime query
      register: cortex_runtime_status
      failed_when: false
      changed_when: false
      when: cortex_installed

    - name: Calcular porcentaje de uso de memoria
      set_fact:
        memory_usage_percent: "{{ ((ansible_memtotal_mb - ansible_memfree_mb) / ansible_memtotal_mb * 100) | round(1) }}"

    - name: Calcular espacio en disco
      set_fact:
        disk_total_gb: "{{ (ansible_mounts[0].size_total | int / (1024*1024*1024)) | round(1) }}"
        disk_used_gb: "{{ ((ansible_mounts[0].size_total - ansible_mounts[0].size_available) | int / (1024*1024*1024)) | round(1) }}"

    - name: Armar reporte por host
      set_fact:
        reporte_host: |

          ═══════════════════════════════════════════════════════════
          🖥️  HOST: {{ inventory_hostname | upper }}
          ═══════════════════════════════════════════════════════════

          💻 PROCESAMIENTO:
             • CPU: {{ ansible_processor_cores }} cores, {{ ansible_processor_count }} procesadores
             • Arquitectura: {{ ansible_architecture }}

          🧠 MEMORIA:
             • Total: {{ ansible_memtotal_mb }} MB ({{ (ansible_memtotal_mb/1024) | round(1) }} GB)
             • Disponible: {{ ansible_memfree_mb }} MB
             • Uso: {{ memory_usage_percent }}%

          💾 ALMACENAMIENTO:
             • Disco Raíz: {{ disk_total_gb }} GB total
             • Usado: {{ disk_used_gb }} GB
             • Disponible: {{ ((ansible_mounts[0].size_available | int) / (1024*1024*1024)) | round(1) }} GB

          📊 AGENTES DE MONITOREO:
             • Zabbix Agent: {% if zabbix_agent_status.stat.exists %}✅ INSTALADO{% else %}❌ NO INSTALADO{% endif %}

             • Cortex Agent: {% if cortex_installed %}✅ INSTALADO{% else %}❌ NO INSTALADO{% endif %}
          {% if cortex_installed and cortex_runtime_status.rc is defined %}
               └─ Estado: {% if cortex_runtime_status.rc == 0 %}🟢 ACTIVO{% else %}🟡 INACTIVO{% endif %}
          {% endif %}

          🔍 DETALLES DE CORTEX:
          {{ cortex_details }}

          🔧 SISTEMA:
             • OS: {{ ansible_distribution }} {{ ansible_distribution_version }}
             • Kernel: {{ ansible_kernel }}
             • Uptime: {{ ansible_uptime_seconds | int // 3600 }} horas

          📅 Generado: {{ ansible_date_time.date }} {{ ansible_date_time.time }}

          ═══════════════════════════════════════════════════════════

    - name: Mostrar reporte del host
      shell: |
        echo "{{ reporte_host }}"
      register: reporte_output

    - name: Mostrar contenido del reporte
      debug:
        var: reporte_output.stdout_lines

    - name: Consolidar reportes de todos los hosts
      set_fact:
        reporte_consolidado: "{{ hostvars['localhost']['reporte_consolidado'] | default('') + reporte_host }}"
      delegate_to: localhost
      run_once: false

    - name: Mostrar reporte consolidado final
      shell: |
        echo "
        ███████████████████████████████████████████████████████████████████████
        📋 REPORTE CONSOLIDADO DE INFRAESTRUCTURA - {{ ansible_date_time.date }}
        ███████████████████████████████████████████████████████████████████████
        {{ hostvars['localhost']['reporte_consolidado'] | default('') }}

        📊 RESUMEN:
        • Total de hosts procesados: {{ ansible_play_hosts | length }}
        • Generación completada: {{ ansible_date_time.time }}

        ███████████████████████████████████████████████████████████████████████
        "
      register: reporte_consolidado_output
      delegate_to: localhost
      run_once: true
      become: no

    - name: Mostrar contenido del reporte consolidado
      debug:
        var: reporte_consolidado_output.stdout_lines
      delegate_to: localhost
      run_once: true
